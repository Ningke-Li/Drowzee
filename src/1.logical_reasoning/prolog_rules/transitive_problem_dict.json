{
    "father": "trans_father(Entity_A, Entity_B)",
    "software_engine": "trans_software_engine(Entity_A, Entity_B)",
    "depicted_by": "trans_depicted_by(Entity_A, Entity_B)",
    "affiliation": "trans_affiliation(Entity_A, Entity_B)",
    "production_company": "trans_production_company(Entity_A, Entity_B)",
    "references_work_tradition_or_theory": "trans_references_work_tradition_or_theory(Entity_A, Entity_B)",
    "characters": "trans_characters(Entity_A, Entity_B)",
    "compatible_with": "trans_compatible_with(Entity_A, Entity_B)",
    "programmed_in": "trans_programmed_in(Entity_A, Entity_B)",
    "described_by_source": "trans_described_by_source(Entity_A, Entity_B)",
    "inflows": "trans_inflows(Entity_A, Entity_B)",
    "different_from": "trans_different_from(Entity_A, Entity_B)",
    "part_of_the_series": "trans_part_of_the_series(Entity_A, Entity_B)",
    "exemplar_of": "trans_exemplar_of(Entity_A, Entity_B)",
    "mountain_range": "trans_mountain_range(Entity_A, Entity_B)",
    "applies_to_jurisdiction": "trans_applies_to_jurisdiction(Entity_A, Entity_B)",
    "used_by": "trans_used_by(Entity_A, Entity_B)",
    "distributary": "trans_distributary(Entity_A, Entity_B)",
    "topic_s_main_category": "trans_topic_s_main_category(Entity_A, Entity_B)",
    "collection": "trans_collection(Entity_A, Entity_B)",
    "religion_or_worldview": "trans_religion_or_worldview(Entity_A, Entity_B)",
    "founded_by": "trans_founded_by(Entity_A, Entity_B)",
    "twinned_administrative_body": "trans_twinned_administrative_body(Entity_A, Entity_B)",
    "cast_member": "trans_cast_member(Entity_A, Entity_B)",
    "has_part_s_": "trans_has_part_s_(Entity_A, Entity_B)",
    "official_religion": "trans_official_religion(Entity_A, Entity_B)",
    "based_on": "trans_based_on(Entity_A, Entity_B)",
    "adjacent_building": "trans_adjacent_building(Entity_A, Entity_B)",
    "said_to_be_the_same_as": "trans_said_to_be_the_same_as(Entity_A, Entity_B)",
    "connects_with": "trans_connects_with(Entity_A, Entity_B)",
    "main_subject": "trans_main_subject(Entity_A, Entity_B)",
    "field_of_work": "trans_field_of_work(Entity_A, Entity_B)",
    "parent_taxon": "trans_parent_taxon(Entity_A, Entity_B)",
    "media_franchise": "trans_media_franchise(Entity_A, Entity_B)",
    "performer": "trans_performer(Entity_A, Entity_B)",
    "origin_of_the_watercourse": "trans_origin_of_the_watercourse(Entity_A, Entity_B)",
    "made_from_material": "trans_made_from_material(Entity_A, Entity_B)",
    "subclass_of": "trans_subclass_of(Entity_A, Entity_B)",
    "genre": "trans_genre(Entity_A, Entity_B)",
    "derivative_work": "trans_derivative_work(Entity_A, Entity_B)",
    "parent_organization": "trans_parent_organization(Entity_A, Entity_B)",
    "sport": "trans_sport(Entity_A, Entity_B)",
    "family": "trans_family(Entity_A, Entity_B)",
    "employer": "trans_employer(Entity_A, Entity_B)",
    "operator": "trans_operator(Entity_A, Entity_B)",
    "has_effect": "trans_has_effect(Entity_A, Entity_B)",
    "studied_in": "trans_studied_in(Entity_A, Entity_B)",
    "unmarried_partner": "trans_unmarried_partner(Entity_A, Entity_B)",
    "taxonomic_type": "trans_taxonomic_type(Entity_A, Entity_B)",
    "terminus": "trans_terminus(Entity_A, Entity_B)",
    "ethnic_group": "trans_ethnic_group(Entity_A, Entity_B)",
    "located_in_the_administrative_territorial_entity": "trans_located_in_the_administrative_territorial_entity(Entity_A, Entity_B)",
    "mouth_of_the_watercourse": "trans_mouth_of_the_watercourse(Entity_A, Entity_B)",
    "set_in_period": "trans_set_in_period(Entity_A, Entity_B)",
    "capital": "trans_capital(Entity_A, Entity_B)",
    "shares_border_with": "trans_shares_border_with(Entity_A, Entity_B)",
    "award_received": "trans_award_received(Entity_A, Entity_B)",
    "time_period": "trans_time_period(Entity_A, Entity_B)",
    "uses": "trans_uses(Entity_A, Entity_B)",
    "significant_drug_interaction": "trans_significant_drug_interaction(Entity_A, Entity_B)",
    "headquarters_location": "trans_headquarters_location(Entity_A, Entity_B)",
    "location": "trans_location(Entity_A, Entity_B)",
    "supports_programming_language": "trans_supports_programming_language(Entity_A, Entity_B)",
    "member_of": "trans_member_of(Entity_A, Entity_B)",
    "facet_of": "trans_facet_of(Entity_A, Entity_B)",
    "basic_form_of_government": "trans_basic_form_of_government(Entity_A, Entity_B)",
    "original_broadcaster": "trans_original_broadcaster(Entity_A, Entity_B)",
    "terminus_location": "trans_terminus_location(Entity_A, Entity_B)",
    "has_use": "trans_has_use(Entity_A, Entity_B)",
    "field_of_this_occupation": "trans_field_of_this_occupation(Entity_A, Entity_B)",
    "located_in_or_next_to_body_of_water": "trans_located_in_or_next_to_body_of_water(Entity_A, Entity_B)",
    "replaces": "trans_replaces(Entity_A, Entity_B)",
    "developer": "trans_developer(Entity_A, Entity_B)",
    "worshipped_by": "trans_worshipped_by(Entity_A, Entity_B)",
    "followed_by": "trans_followed_by(Entity_A, Entity_B)",
    "partnership_with": "trans_partnership_with(Entity_A, Entity_B)",
    "generalization_of": "trans_generalization_of(Entity_A, Entity_B)",
    "filming_location": "trans_filming_location(Entity_A, Entity_B)",
    "mother": "trans_mother(Entity_A, Entity_B)",
    "director": "trans_director(Entity_A, Entity_B)",
    "instance_of": "trans_instance_of(Entity_A, Entity_B)",
    "published_in": "trans_published_in(Entity_A, Entity_B)",
    "follows": "trans_follows(Entity_A, Entity_B)",
    "distributed_by": "trans_distributed_by(Entity_A, Entity_B)",
    "platform": "trans_platform(Entity_A, Entity_B)",
    "located_on_street": "trans_located_on_street(Entity_A, Entity_B)",
    "partially_coincident_with": "trans_partially_coincident_with(Entity_A, Entity_B)",
    "samples_from_work": "trans_samples_from_work(Entity_A, Entity_B)",
    "plot_expanded_in": "trans_plot_expanded_in(Entity_A, Entity_B)",
    "statement_is_subject_of": "trans_statement_is_subject_of(Entity_A, Entity_B)",
    "capital_of": "trans_capital_of(Entity_A, Entity_B)",
    "contains_the_administrative_territorial_entity": "trans_contains_the_administrative_territorial_entity(Entity_A, Entity_B)",
    "replaced_by": "trans_replaced_by(Entity_A, Entity_B)",
    "country": "trans_country(Entity_A, Entity_B)",
    "investor": "trans_investor(Entity_A, Entity_B)",
    "has_subsidiary": "trans_has_subsidiary(Entity_A, Entity_B)",
    "tributary": "trans_tributary(Entity_A, Entity_B)",
    "contains": "trans_contains(Entity_A, Entity_B)",
    "creator": "trans_creator(Entity_A, Entity_B)",
    "owner_of": "trans_owner_of(Entity_A, Entity_B)",
    "significant_event": "trans_significant_event(Entity_A, Entity_B)",
    "opposite_of": "trans_opposite_of(Entity_A, Entity_B)",
    "child": "trans_child(Entity_A, Entity_B)",
    "significant_person": "trans_significant_person(Entity_A, Entity_B)",
    "lake_on_watercourse": "trans_lake_on_watercourse(Entity_A, Entity_B)",
    "edition_or_translation_of": "trans_edition_or_translation_of(Entity_A, Entity_B)",
    "influenced_by": "trans_influenced_by(Entity_A, Entity_B)",
    "owned_by": "trans_owned_by(Entity_A, Entity_B)",
    "practiced_by": "trans_practiced_by(Entity_A, Entity_B)",
    "outflows": "trans_outflows(Entity_A, Entity_B)",
    "spouse": "trans_spouse(Entity_A, Entity_B)",
    "located_in_on_physical_feature": "trans_located_in_on_physical_feature(Entity_A, Entity_B)",
    "drainage_basin": "trans_drainage_basin(Entity_A, Entity_B)",
    "mod_of": "trans_mod_of(Entity_A, Entity_B)",
    "has_edition_or_translation": "trans_has_edition_or_translation(Entity_A, Entity_B)",
    "territory_overlaps": "trans_territory_overlaps(Entity_A, Entity_B)",
    "partner_in_business_or_sport": "trans_partner_in_business_or_sport(Entity_A, Entity_B)",
    "diplomatic_relation": "trans_diplomatic_relation(Entity_A, Entity_B)",
    "named_after": "trans_named_after(Entity_A, Entity_B)",
    "participant_in": "trans_participant_in(Entity_A, Entity_B)",
    "takes_place_in_fictional_universe": "trans_takes_place_in_fictional_universe(Entity_A, Entity_B)",
    "inspired_by": "trans_inspired_by(Entity_A, Entity_B)",
    "present_in_work": "trans_present_in_work(Entity_A, Entity_B)",
    "has_characteristic": "trans_has_characteristic(Entity_A, Entity_B)",
    "part_of": "trans_part_of(Entity_A, Entity_B)",
    "set_during_recurring_event": "trans_set_during_recurring_event(Entity_A, Entity_B)",
    "sibling": "trans_sibling(Entity_A, Entity_B)",
    "depicts": "trans_depicts(Entity_A, Entity_B)"
}